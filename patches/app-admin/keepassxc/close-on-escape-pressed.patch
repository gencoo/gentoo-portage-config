diff --git a/src/gui/MainWindow.cpp b/src/gui/MainWindow.cpp
index 0d53d88..4519e6d 100644
--- a/src/gui/MainWindow.cpp
+++ b/src/gui/MainWindow.cpp
@@ -157,7 +157,7 @@ MainWindow::MainWindow()
     setAcceptDrops(true);
 
     // Setup the search widget in the toolbar
-    m_searchWidget = new SearchWidget();
+    m_searchWidget = new SearchWidget(this);
     m_searchWidget->connectSignals(m_actionMultiplexer);
     m_searchWidgetAction = m_ui->toolBar->addWidget(m_searchWidget);
     m_searchWidgetAction->setEnabled(false);
diff --git a/src/gui/SearchWidget.cpp b/src/gui/SearchWidget.cpp
index 5102d19..164222a 100644
--- a/src/gui/SearchWidget.cpp
+++ b/src/gui/SearchWidget.cpp
@@ -51,7 +51,18 @@ SearchWidget::SearchWidget(QWidget* parent)
     connect(m_ui->searchIcon, SIGNAL(triggered()), SLOT(showSearchMenu()));
     connect(m_searchTimer, SIGNAL(timeout()), SLOT(startSearch()));
     connect(m_clearSearchTimer, SIGNAL(timeout()), m_ui->searchEdit, SLOT(clear()));
-    connect(this, SIGNAL(escapePressed()), m_ui->searchEdit, SLOT(clear()));
+    connect(this, &SearchWidget::escapePressed, this, [&]{
+        // if the search field is already empty, close the main window instead
+        if (m_ui->searchEdit->text().isEmpty())
+        {
+            qobject_cast<QWidget*>(this->parent())->close();
+        }
+        // otherwise clear the search field
+        else
+        {
+            m_ui->searchEdit->clear();
+        }
+    });
 
     new QShortcut(QKeySequence::Find, this, SLOT(searchFocus()), nullptr, Qt::ApplicationShortcut);
     new QShortcut(Qt::Key_Escape, m_ui->searchEdit, SLOT(clear()), nullptr, Qt::ApplicationShortcut);
