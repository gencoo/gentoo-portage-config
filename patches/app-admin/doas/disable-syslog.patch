diff --git a/doas.c b/doas.c
index ac3a42a..64df5a7 100644
--- a/doas.c
+++ b/doas.c
@@ -32,7 +32,6 @@
 #include <unistd.h>
 #include <pwd.h>
 #include <grp.h>
-#include <syslog.h>
 #include <errno.h>
 #include <fcntl.h>
 
@@ -344,8 +343,6 @@ main(int argc, char **argv)
 	cmd = argv[0];
 	if (!permit(uid, groups, ngroups, &rule, target, cmd,
 	    (const char **)argv + 1)) {
-		syslog(LOG_AUTHPRIV | LOG_NOTICE,
-		    "command not permitted for %s: %s", mypw->pw_name, cmdline);
 		errc(1, EPERM, NULL);
 	}
 
@@ -407,9 +404,6 @@ main(int argc, char **argv)
 		cwd = cwdpath;
 
 	if (!(rule->options & NOLOG)) {
-		syslog(LOG_AUTHPRIV | LOG_INFO,
-		    "%s ran command %s as %s from %s",
-		    mypw->pw_name, cmdline, targpw->pw_name, cwd);
 	}
 
 	envp = prepenv(rule, mypw, targpw);
diff --git a/pam.c b/pam.c
index a9e2036..442f18c 100644
--- a/pam.c
+++ b/pam.c
@@ -32,7 +32,6 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <syslog.h>
 #include <unistd.h>
 
 #include <security/pam_appl.h>
@@ -290,7 +289,6 @@ pamauth(const char *user, const char *myname, int interactive, int nopass, int p
 		ret = pam_authenticate(pamh, 0);
 		if (ret != PAM_SUCCESS) {
 			pamcleanup(ret, sess, cred);
-			syslog(LOG_AUTHPRIV | LOG_NOTICE, "failed auth for %s", myname);
 			errx(1, "Authentication failed");
 		}
 	}
@@ -303,7 +301,6 @@ pamauth(const char *user, const char *myname, int interactive, int nopass, int p
 	/* account not vaild or changing the auth token failed */
 	if (ret != PAM_SUCCESS) {
 		pamcleanup(ret, sess, cred);
-		syslog(LOG_AUTHPRIV | LOG_NOTICE, "failed auth for %s", myname);
 		errx(1, "Authentication failed");
 	}
 
diff --git a/shadow.c b/shadow.c
index 2569b58..b182462 100644
--- a/shadow.c
+++ b/shadow.c
@@ -31,7 +31,6 @@
 #include <shadow.h>
 #include <stdio.h>
 #include <string.h>
-#include <syslog.h>
 #include <unistd.h>
 
 #include "openbsd.h"
@@ -83,8 +82,6 @@ shadowauth(const char *myname, int persist)
 
 	response = readpassphrase(challenge, rbuf, sizeof(rbuf), RPP_REQUIRE_TTY);
 	if (response == NULL && errno == ENOTTY) {
-		syslog(LOG_AUTHPRIV | LOG_NOTICE,
-			"tty required for %s", myname);
 		errx(1, "a tty is required");
 	}
 	if (response == NULL)
@@ -95,7 +92,6 @@ shadowauth(const char *myname, int persist)
 	}
 	explicit_bzero(rbuf, sizeof(rbuf));
 	if (strcmp(encrypted, hash) != 0) {
-		syslog(LOG_AUTHPRIV | LOG_NOTICE, "failed auth for %s", myname);
 		errx(1, "Authentication failed");
 	}
 
