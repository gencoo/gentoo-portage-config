diff --git a/src/core/ksambashare.cpp b/src/core/ksambashare.cpp
index 4a3f138..ecdba0c 100644
--- a/src/core/ksambashare.cpp
+++ b/src/core/ksambashare.cpp
@@ -153,26 +153,8 @@ QString KSambaSharePrivate::testparmParamValue(const QString &parameterName)
             err.removeFirst();
         }
         if (err.count() > 0 && err.at(0).startsWith("WARNING: The 'netbios name' is too long (max. 15 chars).")) {
-            // netbios name must be of at most 15 characters long
-            // means either netbios name is badly configured
-            // or not set and the default value is being used , it being "$(hostname)-W"
-            // which means any hostname longer than 13 caracters will cause this warning
-            // when no netbios name was defined
-            // See https://www.novell.com/documentation/open-enterprise-server-2018/file_samba_cifs_lx/data/bc855e3.html
-            const QString defaultNetbiosName = QHostInfo::localHostName().append(QStringLiteral("-W"));
-            if (defaultNetbiosName.length() > 14) {
-                qCWarning(KIO_CORE) << "Your samba 'netbios name' parameter was longer than the authorized 15 characters.\n"
-                                    << "It may be because your hostname is longer than 13 and samba default 'netbios name' defaults to 'hostname-W', here:" << defaultNetbiosName<< "\n"
-                                    << "If that it is the case simply define a 'netbios name' parameter in /etc/samba/smb.conf at most 15 characters long";
-            } else {
-                qCWarning(KIO_CORE) << "Your samba 'netbios name' parameter was longer than the authorized 15 characters."
-                                    << "Please define a 'netbios name' parameter in /etc/samba/smb.conf at most 15 characters long";
-            }
             err.removeFirst();
         }
-        if (err.count() > 0) {
-            qCWarning(KIO_CORE) << "We got some errors while running testparm" << err.join("\n");
-        }
     }
 
     if (!stdOut.isEmpty()) {
@@ -203,12 +185,6 @@ QByteArray KSambaSharePrivate::getNetUserShareInfo()
             skipUserShare = true;
         } else if (stdErr.contains("usershares are currently disabled")) {
             skipUserShare = true;
-        } else {
-            //TODO: parse and process other error messages.
-            // create a parser for the error output and
-            // send error message somewhere
-            qCWarning(KIO_CORE) << "We got some errors while running 'net usershare info'";
-            qCWarning(KIO_CORE) << stdErr;
         }
     }
 
@@ -367,14 +343,6 @@ KSambaShareData::UserShareError KSambaSharePrivate::add(const KSambaShareData &s
 
     int ret = runProcess(QStringLiteral("net"), args, stdOut, stdErr);
 
-    //TODO: parse and process error messages.
-    if (!stdErr.isEmpty()) {
-        // create a parser for the error output and
-        // send error message somewhere
-        qCWarning(KIO_CORE) << "We got some errors while running 'net usershare add'" << args;
-        qCWarning(KIO_CORE) << stdErr;
-    }
-
     return (ret == 0) ? KSambaShareData::UserShareOk : KSambaShareData::UserShareSystemError;
 }
 
