diff --git a/libnotificationmanager/notificationsmodel.cpp b/libnotificationmanager/notificationsmodel.cpp
--- a/libnotificationmanager/notificationsmodel.cpp
+++ b/libnotificationmanager/notificationsmodel.cpp
@@ -129,32 +129,6 @@
 
     q->stopTimeout(removedId);
 
-    // When a notification expired, keep it around in the history and mark it as such
-    if (reason == Server::CloseReason::Expired) {
-        const QModelIndex idx = q->index(row, 0);
-
-        Notification &notification = notifications[row];
-        notification.setExpired(true);
-
-        // Since the notification is "closed" it cannot have any actions
-        // unless it is "resident" which we don't support
-        notification.setActions(QStringList());
-
-        emit q->dataChanged(idx, idx, {
-            Notifications::ExpiredRole,
-            // TODO only emit those if actually changed?
-            Notifications::ActionNamesRole,
-            Notifications::ActionLabelsRole,
-            Notifications::HasDefaultActionRole,
-            Notifications::DefaultActionLabelRole,
-            Notifications::ConfigurableRole
-        });
-
-        return;
-    }
-
-    // Otherwise if explicitly closed by either user or app, remove it
-
     q->beginRemoveRows(QModelIndex(), row, row);
     notifications.removeAt(row);
     q->endRemoveRows();
