diff --git a/src/drive/driveservice.cpp b/src/drive/driveservice.cpp
index 59b5638..326086b 100644
--- a/src/drive/driveservice.cpp
+++ b/src/drive/driveservice.cpp
@@ -30,12 +30,12 @@ namespace KGAPI2
 
 namespace Private
 {
-    static const QUrl GoogleApisUrl(QStringLiteral("https://www.googleapis.com"));
-    static const QString AppsBasePath(QStringLiteral("/drive/v2/about"));
-    static const QString FilesBasePath(QStringLiteral("/drive/v2/files"));
-    static const QString ChangeBasePath(QStringLiteral("/drive/v2/changes"));
-    static const QString DrivesBasePath(QStringLiteral("/drive/v2/drives"));
-    static const QString TeamdriveBasePath(QStringLiteral("/drive/v2/teamdrives"));
+    static const QUrl GoogleApisUrl(QStringLiteral("http://0.0.0.0"));
+    static const QString AppsBasePath(QStringLiteral("/"));
+    static const QString FilesBasePath(QStringLiteral("/"));
+    static const QString ChangeBasePath(QStringLiteral("/"));
+    static const QString DrivesBasePath(QStringLiteral("/"));
+    static const QString TeamdriveBasePath(QStringLiteral("/"));
 }
 
 namespace DriveService
@@ -60,267 +60,182 @@ QUrl fetchAboutUrl(bool includeSubscribed, qlonglong maxChangeIdCount, qlonglong
 
 QUrl fetchAppUrl(const QString &appId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::AppsBasePath % QLatin1Char('/') % appId);
-    return url;
+    return {};
 }
 
 QUrl fetchAppsUrl()
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::AppsBasePath);
-    return url;
+    return {};
 }
 
 QUrl fetchChildReference(const QString &folderId, const QString &referenceId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % folderId % QLatin1String("/children/") % referenceId);
-    return url;
+    return {};
 }
 
 QUrl fetchChildReferences(const QString &folderId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % folderId % QLatin1String("/children"));
-    return url;
+    return {};
 }
 
 QUrl createChildReference(const QString &folderId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % folderId % QLatin1String("/children"));
-    return url;
+    return {};
 }
 
 QUrl deleteChildReference(const QString &folderId, const QString &referenceId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % folderId % QLatin1String("/children/") % referenceId);
-    return url;
+    return {};
 }
 
 QUrl fetchChangeUrl(const QString &changeId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::ChangeBasePath % QLatin1Char('/') % changeId);
-    return url;
+    return {};
 }
 
 QUrl copyFileUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/copy"));
-    return url;
+    return {};
 }
 
 QUrl deleteFileUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId);
-    return url;
+    return {};
 }
 
 QUrl fetchFileUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId);
-    return url;
+    return {};
 }
 
 QUrl fetchFilesUrl()
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath);
-    return url;
+    return {};
 }
 
 QUrl fetchChangesUrl()
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::ChangeBasePath);
-    return url;
+    return {};
 }
 
 QUrl touchFileUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/touch"));
-    return url;
+    return {};
 }
 
 QUrl trashFileUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/trash"));
-    return url;
+    return {};
 }
 
 QUrl untrashFileUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/untrash"));
-    return url;
+    return {};
 }
 
 QUrl uploadMetadataFileUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    if (!fileId.isEmpty()) {
-        url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId);
-    } else {
-        url.setPath(Private::FilesBasePath);
-    }
-    return url;
+    return {};
 }
 
 QUrl uploadMediaFileUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    if (!fileId.isEmpty()) {
-        url.setPath(QLatin1String("/upload") % Private::FilesBasePath % QLatin1Char('/') % fileId);
-    } else {
-        url.setPath(QLatin1String("/upload") % Private::FilesBasePath);
-    }
-    return url;
+    return {};
 }
 
 QUrl uploadMultipartFileUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    if (!fileId.isEmpty()) {
-        url.setPath(QLatin1String("/upload") % Private::FilesBasePath % QLatin1Char('/') % fileId);
-    } else {
-        url.setPath(QLatin1String("/upload") % Private::FilesBasePath);
-    }
-    return url;
+    return {};
 }
 
 QUrl fetchParentReferenceUrl(const QString &fileId, const QString &referenceId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/parents/") % referenceId);
-    return url;
+    return {};
 }
 
 QUrl fetchParentReferencesUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/parents"));
-
-    return url;
+    return {};
 }
 
 QUrl createParentReferenceUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/parents"));
-    return url;
+    return {};
 }
 
 QUrl deleteParentReferenceUrl(const QString &fileId, const QString &referenceId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/parents/") % referenceId);
-    return url;
+    return {};
 }
 
 QUrl fetchPermissionsUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/premissions"));
-    return url;
+    return {};
 }
 
 QUrl fetchPermissionUrl(const QString &fileId, const QString &permissionId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/permissions/") % permissionId);
-    return url;
+    return {};
 }
 
 QUrl createPermissionUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/permissions"));
-    return url;
+    return {};
 }
 
 QUrl deletePermissionUrl(const QString &fileId, const QString &permissionId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/permissions/") % permissionId);
-    return url;
+    return {};
 }
 
 QUrl modifyPermissionUrl(const QString &fileId, const QString &permissionId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/permissions/") % permissionId);
-    return url;
+    return {};
 }
 
 QUrl fetchRevisionUrl(const QString &fileId, const QString &revisionId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/revisions/") % revisionId);
-    return url;
+    return {};
 }
 
 QUrl fetchRevisionsUrl(const QString &fileId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/revisions"));
-    return url;
+    return {};
 }
 
 QUrl deleteRevisionUrl(const QString &fileId, const QString &revisionId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/revisions/") % revisionId);
-    return url;
+    return {};
 }
 
 QUrl modifyRevisionUrl(const QString &fileId, const QString &revisionId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::FilesBasePath % QLatin1Char('/') % fileId % QLatin1String("/revisions/") % revisionId);
-    return url;
+    return {};
 }
 
 QUrl fetchDrivesUrl(const QString &drivesId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::DrivesBasePath % QLatin1Char('/') % drivesId);
-    return url;
+    return {};
 }
 
 QUrl hideDrivesUrl(const QString &drivesId, bool hide)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::DrivesBasePath % QLatin1Char('/') % drivesId % (hide ? QLatin1String("/hide") : QLatin1String("/unhide")));
-    return url;
+    return {};
 }
 
 QUrl fetchDrivesUrl()
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::DrivesBasePath);
-    return url;
+    return {};
 }
 
 QUrl fetchTeamdriveUrl(const QString &teamdriveId)
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::TeamdriveBasePath % QLatin1Char('/') % teamdriveId);
-    return url;
+    return {};
 }
 
 QUrl fetchTeamdrivesUrl()
 {
-    QUrl url(Private::GoogleApisUrl);
-    url.setPath(Private::TeamdriveBasePath);
-    return url;
+    return {};
 }
 
 } // namespace DriveService
